/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "whatwg-fetch":
/*!*******************************!*\
  !*** external "whatwg-fetch" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("whatwg-fetch");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "@langchain/core/embeddings":
/*!*********************************************!*\
  !*** external "@langchain/core/embeddings" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/embeddings");;

/***/ }),

/***/ "@langchain/core/language_models/base":
/*!*******************************************************!*\
  !*** external "@langchain/core/language_models/base" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/language_models/base");;

/***/ }),

/***/ "@langchain/core/language_models/chat_models":
/*!**************************************************************!*\
  !*** external "@langchain/core/language_models/chat_models" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/language_models/chat_models");;

/***/ }),

/***/ "@langchain/core/messages":
/*!*******************************************!*\
  !*** external "@langchain/core/messages" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/messages");;

/***/ }),

/***/ "@langchain/core/output_parsers":
/*!*************************************************!*\
  !*** external "@langchain/core/output_parsers" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/output_parsers");;

/***/ }),

/***/ "@langchain/core/output_parsers/openai_tools":
/*!**************************************************************!*\
  !*** external "@langchain/core/output_parsers/openai_tools" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/output_parsers/openai_tools");;

/***/ }),

/***/ "@langchain/core/outputs":
/*!******************************************!*\
  !*** external "@langchain/core/outputs" ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/outputs");;

/***/ }),

/***/ "@langchain/core/runnables":
/*!********************************************!*\
  !*** external "@langchain/core/runnables" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/runnables");;

/***/ }),

/***/ "@langchain/core/utils/chunk_array":
/*!****************************************************!*\
  !*** external "@langchain/core/utils/chunk_array" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/utils/chunk_array");;

/***/ }),

/***/ "@langchain/core/utils/env":
/*!********************************************!*\
  !*** external "@langchain/core/utils/env" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/utils/env");;

/***/ }),

/***/ "@langchain/core/utils/function_calling":
/*!*********************************************************!*\
  !*** external "@langchain/core/utils/function_calling" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/utils/function_calling");;

/***/ }),

/***/ "@langchain/core/utils/json_schema":
/*!****************************************************!*\
  !*** external "@langchain/core/utils/json_schema" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/utils/json_schema");;

/***/ }),

/***/ "@langchain/core/utils/stream":
/*!***********************************************!*\
  !*** external "@langchain/core/utils/stream" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/utils/stream");;

/***/ }),

/***/ "@langchain/core/utils/types":
/*!**********************************************!*\
  !*** external "@langchain/core/utils/types" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@langchain/core/utils/types");;

/***/ }),

/***/ "langchain/vectorstores/memory":
/*!************************************************!*\
  !*** external "langchain/vectorstores/memory" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("langchain/vectorstores/memory");;

/***/ }),

/***/ "p-retry":
/*!**************************!*\
  !*** external "p-retry" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = import("p-retry");;

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = import("uuid");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = import("zod");;

/***/ }),

/***/ "zod/v4/core":
/*!******************************!*\
  !*** external "zod/v4/core" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = import("zod/v4/core");;

/***/ }),

/***/ "(api)/__barrel_optimize__?names=ChatOllama!=!./node_modules/@langchain/ollama/index.js":
/*!****************************************************************************************!*\
  !*** __barrel_optimize__?names=ChatOllama!=!./node_modules/@langchain/ollama/index.js ***!
  \****************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChatOllama: () => (/* reexport safe */ _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__.ChatOllama)
/* harmony export */ });
/* harmony import */ var _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@langchain/ollama/dist/chat_models.js */ "(api)/./node_modules/@langchain/ollama/dist/chat_models.js");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__]);
_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ "(api)/__barrel_optimize__?names=ChatOpenAI!=!./node_modules/@langchain/openai/index.js":
/*!****************************************************************************************!*\
  !*** __barrel_optimize__?names=ChatOpenAI!=!./node_modules/@langchain/openai/index.js ***!
  \****************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChatOpenAI: () => (/* reexport safe */ _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__.ChatOpenAI)
/* harmony export */ });
/* harmony import */ var _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@langchain/openai/dist/chat_models.js */ "(api)/./node_modules/@langchain/openai/dist/chat_models.js");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__]);
_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_chat_models_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ "(api)/__barrel_optimize__?names=OllamaEmbeddings!=!./node_modules/@langchain/ollama/index.js":
/*!**********************************************************************************************!*\
  !*** __barrel_optimize__?names=OllamaEmbeddings!=!./node_modules/@langchain/ollama/index.js ***!
  \**********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OllamaEmbeddings: () => (/* reexport safe */ _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__.OllamaEmbeddings)
/* harmony export */ });
/* harmony import */ var _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@langchain/ollama/dist/embeddings.js */ "(api)/./node_modules/@langchain/ollama/dist/embeddings.js");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__]);
_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_ollama_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ "(api)/__barrel_optimize__?names=OpenAIEmbeddings!=!./node_modules/@langchain/openai/index.js":
/*!**********************************************************************************************!*\
  !*** __barrel_optimize__?names=OpenAIEmbeddings!=!./node_modules/@langchain/openai/index.js ***!
  \**********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OpenAIEmbeddings: () => (/* reexport safe */ _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__.OpenAIEmbeddings)
/* harmony export */ });
/* harmony import */ var _home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@langchain/openai/dist/embeddings.js */ "(api)/./node_modules/@langchain/openai/dist/embeddings.js");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__]);
_home_saif_dc_DC_projects_react_node_js_dcastalia_chatbot_node_modules_langchain_openai_dist_embeddings_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/chat.js */ \"(api)/./pages/api/chat.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNoYXQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmNoYXQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDZ0Q7QUFDaEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLCtDQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywrQ0FBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kY2FzdGFsaWEtY2hhdGJvdC8/N2FkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2NoYXQuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "(api)/./lib/indexer.js":
/*!************************!*\
  !*** ./lib/indexer.js ***!
  \************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getVectorStoreStatus: () => (/* binding */ getVectorStoreStatus),\n/* harmony export */   loadIndex: () => (/* binding */ loadIndex),\n/* harmony export */   refreshVectorStore: () => (/* binding */ refreshVectorStore)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_OpenAIEmbeddings_langchain_openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=OpenAIEmbeddings!=!@langchain/openai */ \"(api)/__barrel_optimize__?names=OpenAIEmbeddings!=!./node_modules/@langchain/openai/index.js\");\n/* harmony import */ var _barrel_optimize_names_OllamaEmbeddings_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=OllamaEmbeddings!=!@langchain/ollama */ \"(api)/__barrel_optimize__?names=OllamaEmbeddings!=!./node_modules/@langchain/ollama/index.js\");\n/* harmony import */ var langchain_vectorstores_memory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! langchain/vectorstores/memory */ \"langchain/vectorstores/memory\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_barrel_optimize_names_OpenAIEmbeddings_langchain_openai__WEBPACK_IMPORTED_MODULE_0__, _barrel_optimize_names_OllamaEmbeddings_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__, langchain_vectorstores_memory__WEBPACK_IMPORTED_MODULE_2__]);\n([_barrel_optimize_names_OpenAIEmbeddings_langchain_openai__WEBPACK_IMPORTED_MODULE_0__, _barrel_optimize_names_OllamaEmbeddings_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__, langchain_vectorstores_memory__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n// Configuration object for better maintainability\nconst CONFIG = {\n    MAX_ENTRIES: process.env.MAX_VECTOR_ENTRIES ? parseInt(process.env.MAX_VECTOR_ENTRIES) : 100,\n    MAX_CONTENT_LENGTH: process.env.MAX_CONTENT_LENGTH ? parseInt(process.env.MAX_CONTENT_LENGTH) : 800,\n    MIN_CONTENT_LENGTH: process.env.MIN_CONTENT_LENGTH ? parseInt(process.env.MIN_CONTENT_LENGTH) : 50,\n    DATA_FILE_PATH: process.env.DATA_FILE_PATH || \"app/data/dcastalia.json\",\n    LLM_PROVIDER: process.env.LLM_PROVIDER || \"ollama\",\n    EMBEDDING_MODEL: process.env.EMBEDDING_MODEL || \"mistral\",\n    OPENAI_EMBEDDING_MODEL: process.env.OPENAI_EMBEDDING_MODEL || \"text-embedding-3-small\"\n};\n// Cache management\nlet vectorStore = null;\nlet lastDataHash = null;\nlet lastLoadTime = null;\n// Content cleaning patterns - organized for better maintainability\nconst CLEANING_PATTERNS = {\n    // HTML and markup removal\n    htmlTags: /<[^>]*>/g,\n    whitespace: /\\s+/g,\n    // JavaScript removal patterns\n    functions: /function\\s+\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\}/g,\n    jquery: /jQuery\\([^)]*\\)[^;]*;/g,\n    gtag: /gtag\\([^)]*\\)/g,\n    dataLayer: /window\\.dataLayer[^;]*;/g,\n    setTimeout: /setTimeout\\([^)]*\\)/g,\n    // CSS removal patterns\n    cssRules: /\\.[a-zA-Z0-9_-]+\\s*\\{[^}]*\\}/g,\n    mediaQueries: /@media[^}]*\\{[^}]*\\}/g,\n    // Common unwanted content patterns\n    copyright: /© \\d{4} [^.]*/g,\n    navigation: /Toggle navigation[^.]*/g,\n    iframes: /<iframe[^>]*>/g,\n    srcAttributes: /src=\"[^\"]*\"/g\n};\n// Unwanted phrases that indicate low-quality content\nconst FILTER_PHRASES = [\n    \"function\",\n    \"jQuery\",\n    \"gtag\",\n    \"setTimeout\",\n    \"\\xa9\",\n    \"Toggle navigation\",\n    \"Get in Touch\",\n    \"Services\",\n    \"About\",\n    \"Contact\",\n    \"Inspiring Innovation\"\n];\n/**\n * Enhanced content cleaning with better error handling and performance\n */ function cleanContent(content) {\n    if (!content || typeof content !== \"string\") {\n        return \"No content available\";\n    }\n    try {\n        let cleaned = content;\n        // Apply all cleaning patterns\n        Object.values(CLEANING_PATTERNS).forEach((pattern)=>{\n            cleaned = cleaned.replace(pattern, \" \");\n        });\n        // Split into sentences and filter out unwanted content\n        const sentences = cleaned.split(/[.!?]/).map((sentence)=>sentence.trim()).filter((sentence)=>{\n            if (sentence.length < 15) return false;\n            // Check for unwanted phrases\n            const lowerSentence = sentence.toLowerCase();\n            return !FILTER_PHRASES.some((phrase)=>lowerSentence.includes(phrase.toLowerCase()));\n        });\n        // Rejoin sentences\n        cleaned = sentences.join(\". \").trim();\n        // Fallback if cleaning removed too much content\n        if (cleaned.length < CONFIG.MIN_CONTENT_LENGTH) {\n            cleaned = content.replace(CLEANING_PATTERNS.htmlTags, \" \").replace(CLEANING_PATTERNS.whitespace, \" \").trim();\n        }\n        // Apply length limits\n        if (cleaned.length > CONFIG.MAX_CONTENT_LENGTH) {\n            // Try to cut at sentence boundary\n            const cutPoint = cleaned.lastIndexOf(\". \", CONFIG.MAX_CONTENT_LENGTH);\n            cleaned = cutPoint > CONFIG.MAX_CONTENT_LENGTH * 0.8 ? cleaned.substring(0, cutPoint + 1) : cleaned.substring(0, CONFIG.MAX_CONTENT_LENGTH) + \"...\";\n        }\n        return cleaned || \"No meaningful content found\";\n    } catch (error) {\n        console.error(\"Error cleaning content:\", error.message);\n        // Robust fallback\n        try {\n            return content.replace(CLEANING_PATTERNS.htmlTags, \" \").replace(CLEANING_PATTERNS.whitespace, \" \").trim().substring(0, CONFIG.MAX_CONTENT_LENGTH) + \"...\";\n        } catch (fallbackError) {\n            console.error(\"Fallback cleaning also failed:\", fallbackError.message);\n            return \"Content processing failed\";\n        }\n    }\n}\n/**\n * Create efficient hash for change detection\n */ function createDataHash(data) {\n    try {\n        // Create hash from URLs, content lengths, and modification indicators\n        const hashInput = data.map((entry)=>`${entry.url || \"no-url\"}:${(entry.content || \"\").length}`).join(\"|\");\n        return crypto__WEBPACK_IMPORTED_MODULE_4__.createHash(\"md5\").update(hashInput).digest(\"hex\").substring(0, 16);\n    } catch (error) {\n        console.error(\"Error creating data hash:\", error.message);\n        return Date.now().toString(); // Fallback to timestamp\n    }\n}\n/**\n * Validate and load data file\n */ async function loadDataFile() {\n    try {\n        // Check if file exists\n        await fs__WEBPACK_IMPORTED_MODULE_3__.promises.access(CONFIG.DATA_FILE_PATH);\n        const fileContent = await fs__WEBPACK_IMPORTED_MODULE_3__.promises.readFile(CONFIG.DATA_FILE_PATH, \"utf8\");\n        const data = JSON.parse(fileContent);\n        if (!Array.isArray(data)) {\n            throw new Error(\"Data file must contain an array\");\n        }\n        console.log(`✓ Data file loaded: ${data.length} entries`);\n        return data;\n    } catch (error) {\n        if (error.code === \"ENOENT\") {\n            throw new Error(`Data file not found: ${CONFIG.DATA_FILE_PATH}`);\n        } else if (error instanceof SyntaxError) {\n            throw new Error(`Invalid JSON in data file: ${error.message}`);\n        }\n        throw error;\n    }\n}\n/**\n * Filter data based on content quality\n */ function filterDataByQuality(data) {\n    const qualityChecks = {\n        hasContent: (entry)=>entry.content && entry.content.length > 0,\n        hasUrl: (entry)=>entry.url && typeof entry.url === \"string\",\n        hasMinLength: (entry)=>entry.content.length >= CONFIG.MIN_CONTENT_LENGTH,\n        notErrorContent: (entry)=>!entry.content.includes(\"Content unavailable\") && !entry.content.includes(\"No content available\") && !entry.content.includes(\"Error processing\"),\n        hasVariedContent: (entry)=>{\n            // Check for content diversity (not just repeated phrases)\n            const words = entry.content.toLowerCase().split(/\\s+/);\n            const uniqueWords = new Set(words);\n            return uniqueWords.size >= words.length * 0.3; // At least 30% unique words\n        }\n    };\n    const filtered = data.filter((entry, index)=>{\n        const checks = Object.entries(qualityChecks);\n        const failedChecks = checks.filter(([name, check])=>!check(entry));\n        if (failedChecks.length > 0) {\n            console.log(`⚠ Filtering entry ${index + 1}: Failed ${failedChecks.map(([name])=>name).join(\", \")}`);\n            return false;\n        }\n        return true;\n    });\n    console.log(`✓ Quality filter: ${filtered.length}/${data.length} entries passed`);\n    return filtered;\n}\n/**\n * Initialize embeddings provider\n */ function createEmbeddings() {\n    try {\n        const provider = CONFIG.LLM_PROVIDER.toLowerCase();\n        switch(provider){\n            case \"openai\":\n                return new _barrel_optimize_names_OpenAIEmbeddings_langchain_openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIEmbeddings({\n                    modelName: CONFIG.OPENAI_EMBEDDING_MODEL\n                });\n            case \"ollama\":\n            default:\n                return new _barrel_optimize_names_OllamaEmbeddings_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__.OllamaEmbeddings({\n                    model: CONFIG.EMBEDDING_MODEL\n                });\n        }\n    } catch (error) {\n        console.error(\"Error creating embeddings provider:\", error.message);\n        // Fallback to Ollama\n        return new _barrel_optimize_names_OllamaEmbeddings_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__.OllamaEmbeddings({\n            model: \"mistral\"\n        });\n    }\n}\n/**\n * Process data for vector store creation\n */ function processDataForVectorStore(data) {\n    console.log(\"\\uD83D\\uDD04 Processing content...\");\n    const processed = data.map((entry, index)=>{\n        try {\n            const cleaned = cleanContent(entry.content);\n            if (index % 10 === 0) {\n                console.log(`Processing ${index + 1}/${data.length}...`);\n            }\n            return {\n                text: cleaned,\n                metadata: {\n                    url: entry.url,\n                    originalLength: entry.content ? entry.content.length : 0,\n                    cleanedLength: cleaned.length,\n                    index: index\n                }\n            };\n        } catch (error) {\n            console.error(`Error processing entry ${index + 1}:`, error.message);\n            return {\n                text: \"Error processing content\",\n                metadata: {\n                    url: entry.url || \"unknown\",\n                    error: true,\n                    index: index\n                }\n            };\n        }\n    });\n    const texts = processed.map((p)=>p.text);\n    const metadatas = processed.map((p)=>p.metadata);\n    console.log(\"✓ Content processing completed\");\n    return {\n        texts,\n        metadatas\n    };\n}\n/**\n * Dispose of existing vector store to free memory\n */ function disposeVectorStore() {\n    if (vectorStore) {\n        console.log(\"\\uD83D\\uDDD1️ Disposing old vector store\");\n        vectorStore = null;\n        // Force garbage collection if available (Node.js with --expose-gc)\n        if (global.gc) {\n            global.gc();\n        }\n    }\n}\n/**\n * Main function to load and create vector index\n */ async function loadIndex() {\n    const startTime = Date.now();\n    try {\n        console.log(\"\\uD83D\\uDE80 Starting vector store creation...\");\n        console.log(`📋 Config: ${CONFIG.MAX_ENTRIES} max entries, ${CONFIG.LLM_PROVIDER} provider`);\n        // Load and validate data\n        const rawData = await loadDataFile();\n        // Check cache validity\n        const currentHash = createDataHash(rawData);\n        const cacheAge = lastLoadTime ? Date.now() - lastLoadTime : Infinity;\n        const maxCacheAge = 5 * 60 * 1000; // 5 minutes\n        if (vectorStore && lastDataHash === currentHash && cacheAge < maxCacheAge) {\n            console.log(\"✅ Using cached vector store\");\n            return vectorStore;\n        }\n        // Dispose old vector store\n        disposeVectorStore();\n        // Filter and limit data\n        const qualityData = filterDataByQuality(rawData);\n        const limitedData = qualityData.slice(0, CONFIG.MAX_ENTRIES);\n        if (limitedData.length < qualityData.length) {\n            console.log(`⚠️ Limited to ${CONFIG.MAX_ENTRIES} entries (${qualityData.length} available)`);\n        }\n        if (limitedData.length === 0) {\n            throw new Error(\"No valid data entries found after filtering\");\n        }\n        // Process data\n        const { texts, metadatas } = processDataForVectorStore(limitedData);\n        // Create embeddings and vector store\n        console.log(\"\\uD83D\\uDD24 Creating embeddings...\");\n        const embeddings = createEmbeddings();\n        console.log(\"\\uD83D\\uDCCA Building vector store...\");\n        vectorStore = await langchain_vectorstores_memory__WEBPACK_IMPORTED_MODULE_2__.MemoryVectorStore.fromTexts(texts, metadatas, embeddings);\n        // Update cache info\n        lastDataHash = currentHash;\n        lastLoadTime = Date.now();\n        const duration = ((Date.now() - startTime) / 1000).toFixed(2);\n        console.log(`✅ Vector store created successfully in ${duration}s`);\n        console.log(`📈 Processed ${limitedData.length} entries`);\n        return vectorStore;\n    } catch (error) {\n        const duration = ((Date.now() - startTime) / 1000).toFixed(2);\n        console.error(`❌ Error in loadIndex after ${duration}s:`, error.message);\n        // Clean up on error\n        disposeVectorStore();\n        // Re-throw with more context\n        throw new Error(`Vector store creation failed: ${error.message}`);\n    }\n}\n/**\n * Get current vector store status\n */ function getVectorStoreStatus() {\n    return {\n        isLoaded: !!vectorStore,\n        lastLoadTime,\n        lastDataHash,\n        config: CONFIG\n    };\n}\n/**\n * Force refresh of vector store\n */ async function refreshVectorStore() {\n    console.log(\"\\uD83D\\uDD04 Forcing vector store refresh...\");\n    disposeVectorStore();\n    lastDataHash = null;\n    lastLoadTime = null;\n    return await loadIndex();\n}\n// Default export for Next.js compatibility\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    loadIndex,\n    getVectorStoreStatus,\n    refreshVectorStore\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/indexer.js\n");

/***/ }),

/***/ "(api)/./pages/api/chat.js":
/*!***************************!*\
  !*** ./pages/api/chat.js ***!
  \***************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_ChatOpenAI_langchain_openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=ChatOpenAI!=!@langchain/openai */ \"(api)/__barrel_optimize__?names=ChatOpenAI!=!./node_modules/@langchain/openai/index.js\");\n/* harmony import */ var _barrel_optimize_names_ChatOllama_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=ChatOllama!=!@langchain/ollama */ \"(api)/__barrel_optimize__?names=ChatOllama!=!./node_modules/@langchain/ollama/index.js\");\n/* harmony import */ var _lib_indexer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/indexer.js */ \"(api)/./lib/indexer.js\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! p-retry */ \"p-retry\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../styles/globals.css */ \"(api)/./styles/globals.css\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_barrel_optimize_names_ChatOpenAI_langchain_openai__WEBPACK_IMPORTED_MODULE_0__, _barrel_optimize_names_ChatOllama_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__, _lib_indexer_js__WEBPACK_IMPORTED_MODULE_2__, p_retry__WEBPACK_IMPORTED_MODULE_3__]);\n([_barrel_optimize_names_ChatOpenAI_langchain_openai__WEBPACK_IMPORTED_MODULE_0__, _barrel_optimize_names_ChatOllama_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__, _lib_indexer_js__WEBPACK_IMPORTED_MODULE_2__, p_retry__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst provider = process.env.LLM_PROVIDER || \"ollama\";\nconst model = provider === \"openai\" ? new _barrel_optimize_names_ChatOpenAI_langchain_openai__WEBPACK_IMPORTED_MODULE_0__.ChatOpenAI({\n    modelName: \"gpt-4\"\n}) : new _barrel_optimize_names_ChatOllama_langchain_ollama__WEBPACK_IMPORTED_MODULE_1__.ChatOllama({\n    model: \"mistral\"\n});\nlet cachedVectorStore = null;\nasync function createVectorStoreWithRetry() {\n    return (0,p_retry__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(async ()=>{\n        console.log(\"Loading vector store...\");\n        const store = await (0,_lib_indexer_js__WEBPACK_IMPORTED_MODULE_2__.loadIndex)();\n        console.log(\"Vector store loaded successfully\");\n        return store;\n    }, {\n        retries: 3,\n        onFailedAttempt: (error)=>{\n            console.warn(`Vector store creation attempt ${error.attemptNumber} failed. ${error.retriesLeft} retries left.`);\n        }\n    });\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { question } = req.body;\n        console.log(\"Received question:\", question);\n        if (!question || !question.trim()) {\n            return res.status(400).json({\n                error: \"Question is required\"\n            });\n        }\n        // Create or use cached vector store\n        if (!cachedVectorStore) {\n            cachedVectorStore = await createVectorStoreWithRetry();\n        }\n        // Search for relevant content with reduced results for faster processing\n        console.log(\"Searching for relevant content...\");\n        const results = await cachedVectorStore.similaritySearch(question.trim(), 2);\n        console.log(\"Search results:\", results.length, \"items found\");\n        if (!results || results.length === 0) {\n            console.log(\"No search results found\");\n            return res.json({\n                answer: \"I couldn't find specific information about that in our database. Please try asking about Dcastalia's services, case studies, or company information.\"\n            });\n        }\n        // Prepare context from search results with length limit\n        const context = results.map((r)=>{\n            const content = r.pageContent || r.content || \"\";\n            const url = r.metadata?.url || r.url || \"\";\n            const limitedContent = content.length > 400 ? content.substring(0, 400) + \"...\" : content;\n            return `${url}\\n${limitedContent}`;\n        }).join(\"\\n\\n\");\n        console.log(\"Context length:\", context.length, \"characters\");\n        // Create a more focused and concise prompt\n        const systemPrompt = `You are a helpful AI assistant for Dcastalia, a software development company in Bangladesh. \nAnswer questions based ONLY on the provided context from dcastalia.com. \nKeep your answers concise (2-3 sentences maximum) and informative.\nIf the context doesn't contain enough information, say so politely.`;\n        const userPrompt = `Question: ${question.trim()}\\n\\nContext:\\n${context}`;\n        // Get response from the model with timeout\n        console.log(\"Calling AI model...\");\n        const response = await Promise.race([\n            model.call([\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                {\n                    role: \"user\",\n                    content: userPrompt\n                }\n            ]),\n            new Promise((_, reject)=>setTimeout(()=>reject(new Error(\"Request timeout\")), 15000))\n        ]);\n        console.log(\"AI response received:\", response.content ? \"Yes\" : \"No\");\n        console.log(\"Response length:\", response.content ? response.content.length : 0);\n        if (!response.content) {\n            throw new Error(\"No content received from AI model\");\n        }\n        res.json({\n            answer: response.content\n        });\n    } catch (error) {\n        console.error(\"Chat API Error:\", error);\n        console.error(\"Error stack:\", error.stack);\n        // Handle specific error types\n        if (error.message && error.message.includes(\"input length exceeds maximum context length\")) {\n            return res.status(500).json({\n                error: \"The content is too long to process. Please try a more specific question about Dcastalia.\"\n            });\n        }\n        if (error.message && error.message.includes(\"Failed to fetch\")) {\n            return res.status(500).json({\n                error: \"Unable to connect to the AI service. Please check your configuration and try again.\"\n            });\n        }\n        if (error.message && error.message.includes(\"Request timeout\")) {\n            return res.status(500).json({\n                error: \"Request timed out. Please try again with a simpler question.\"\n            });\n        }\n        res.status(500).json({\n            error: \"An error occurred while processing your request. Please try again.\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/chat.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@langchain"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();